--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local obf_cached_str = {};
local obf_stringchar = string.char;
local obf_stringbyte = string.byte;
local obf_stringsub = string.sub;
local obf_bitlib = bit32 or bit;
local obf_XOR = obf_bitlib.bxor;
local obf_tableconcat = table.concat;
local obf_tableinsert = table.insert;
local function LUAOBFUSACTOR_DECRYPT_STR_0(LUAOBFUSACTOR_STR, LUAOBFUSACTOR_KEY)
	local result = {};
	for i = 1, #LUAOBFUSACTOR_STR do
		obf_tableinsert(result, obf_stringchar(obf_XOR(obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_STR, i, i + 1)), obf_stringbyte(obf_stringsub(LUAOBFUSACTOR_KEY, 1 + (i % #LUAOBFUSACTOR_KEY), 1 + (i % #LUAOBFUSACTOR_KEY) + 1))) % 256));
	end
	return obf_tableconcat(result);
end
obf_cached_str[371] = LUAOBFUSACTOR_DECRYPT_STR_0("\42\52\33\118\8\103", "\30\109\81\85\29\109");
obf_cached_str[339] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\170\37\94\58\240\179\95\161\42\31\31\234\247", "\147\54\207\92\126\115\131");
obf_cached_str[330] = LUAOBFUSACTOR_DECRYPT_STR_0("\126\86\68\238\66\76\68\231\88\77\22\158\124\93\29", "\190\55\56\100");
obf_cached_str[325] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\198\248\205", "\33\139\163\128\185");
obf_cached_str[314] = LUAOBFUSACTOR_DECRYPT_STR_0("\41\168\100\239\14\155", "\226\110\205\16\132\107");
obf_cached_str[298] = LUAOBFUSACTOR_DECRYPT_STR_0("\20\26\173\248\52\226\240\49\31", "\183\68\118\204\129\81\144");
obf_cached_str[293] = LUAOBFUSACTOR_DECRYPT_STR_0("\111\5\149\31\9\14\19\174\87", "\203\59\96\237\107\69\111\113");
obf_cached_str[291] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\76\235\4\81\193\46", "\174\86\41\147\112\19");
obf_cached_str[281] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\39\182\195\217\65", "\210\228\72\198\161\184\51");
obf_cached_str[266] = LUAOBFUSACTOR_DECRYPT_STR_0("\252\239\171\219\248\244\226\183", "\147\191\135\206\184");
obf_cached_str[251] = LUAOBFUSACTOR_DECRYPT_STR_0("\2\73\85\7\252\87\38\56", "\67\65\33\48\100\151\60");
obf_cached_str[228] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\128\196\55\165\188\64\198\138\210", "\52\178\229\188\67\231\201");
obf_cached_str[226] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\198\83\82\97\95\47\89\164\205", "\45\203\163\43\38\35\42\91");
obf_cached_str[224] = LUAOBFUSACTOR_DECRYPT_STR_0("\31\186\77\21\197", "\110\89\200\44\120\160\130");
obf_cached_str[222] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\17\42\225\244\187\182\4\27\60", "\194\112\116\82\149\182\206");
obf_cached_str[220] = LUAOBFUSACTOR_DECRYPT_STR_0("\209\28\77\151\61\24\59\74\234\23", "\62\133\121\53\227\127\109\79");
obf_cached_str[218] = LUAOBFUSACTOR_DECRYPT_STR_0("\164\92\94\82\181", "\62\226\46\63\63\208\169");
obf_cached_str[216] = LUAOBFUSACTOR_DECRYPT_STR_0("\158\103\227\248\136", "\237\216\21\130\149");
obf_cached_str[214] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\0\59\21\135\86\63\99\250", "\22\147\99\73\112\226\56\120");
obf_cached_str[211] = LUAOBFUSACTOR_DECRYPT_STR_0("\113\254\39\63\62\173\102\242", "\196\28\151\73\86\83");
obf_cached_str[195] = LUAOBFUSACTOR_DECRYPT_STR_0("\42\200\55\124\22\210\55\117\12\211\101\12\40\195\110", "\44\99\166\23");
obf_cached_str[159] = LUAOBFUSACTOR_DECRYPT_STR_0("\203\239\171\36", "\80\142\151\194");
obf_cached_str[156] = LUAOBFUSACTOR_DECRYPT_STR_0("\69\187\137\0\31\232", "\109\122\213\232");
obf_cached_str[154] = LUAOBFUSACTOR_DECRYPT_STR_0("\253\206\67", "\167\186\139\23\136\235");
obf_cached_str[153] = LUAOBFUSACTOR_DECRYPT_STR_0("\243\162\209\213\124\245", "\110\190\199\165\189\19\145\61");
obf_cached_str[152] = LUAOBFUSACTOR_DECRYPT_STR_0("\119\252\85", "\224\34\142\57");
obf_cached_str[151] = LUAOBFUSACTOR_DECRYPT_STR_0("\198\242\141\120\51\237\235", "\118\224\156\226\22\80\136\214");
obf_cached_str[147] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\77\200\175\243\204\6\88\206\227\224\205\84\69\199\186\182\193\72\88\196\164\228\193\82\85\143", "\168\38\44\161\195\150");
obf_cached_str[136] = LUAOBFUSACTOR_DECRYPT_STR_0("\139\208\1\37\173\131\241", "\194\231\148\100\70");
obf_cached_str[134] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\169\14\193", "\60\140\200\99\164");
obf_cached_str[133] = LUAOBFUSACTOR_DECRYPT_STR_0("\23\59\180", "\33\80\126\224\120");
obf_cached_str[132] = LUAOBFUSACTOR_DECRYPT_STR_0("\125\164\225\43\75\42", "\78\48\193\149\67\36");
obf_cached_str[131] = LUAOBFUSACTOR_DECRYPT_STR_0("\51\13\94", "\235\102\127\50\167\204\18");
obf_cached_str[130] = LUAOBFUSACTOR_DECRYPT_STR_0("\33\51\16\122\90\27\143\19\103\66\118\88\78\139\12\97\7\126\79\23\202\2\118\11\113\76\78\153\5\125\22\51\11\30\134\5\114\17\122\11\29\134\15\100\66\123\68\25\132\78", "\234\96\19\98\31\43\110");
obf_cached_str[129] = LUAOBFUSACTOR_DECRYPT_STR_0("\226\23\3\180\70\173\232", "\80\196\121\108\218\37\200\213");
obf_cached_str[128] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\55\65\251\14", "\98\236\92\36\130\51");
obf_cached_str[127] = LUAOBFUSACTOR_DECRYPT_STR_0("\116\27\44\80\133\147\203\45\27\45\71\214", "\162\75\114\72\53\235\231");
obf_cached_str[125] = LUAOBFUSACTOR_DECRYPT_STR_0("\229\132\237\95\218\196\193\237\76\203\195\147\241\76\219\150\128\241\9\214\216\151\254\69\214\210\193\236\93\222\194\148\236\9\220\217\133\250\5\159\198\141\250\72\204\211\193\235\91\198\150\128\248\72\214\216\193\243\72\203\211\147\177", "\191\182\225\159\41");
obf_cached_str[124] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\224\77\150\36\68\246\175\90\211\44\88\244\175\74\215\49\83\179\227\81\219\44\66\246\235\20\150\53\90\246\238\75\211\101\65\242\230\76\150\119\6\179\252\93\213\42\88\247\252\24\215\43\82\179\251\74\207\101\87\244\238\81\216\107", "\54\147\143\56\182\69");
obf_cached_str[121] = LUAOBFUSACTOR_DECRYPT_STR_0("\115\18\62\6\81\4\103\79\86\1\38\74\81\19\105", "\38\56\119\71");
obf_cached_str[120] = LUAOBFUSACTOR_DECRYPT_STR_0("\96\72\113\43\12", "\83\38\26\52\110");
obf_cached_str[115] = LUAOBFUSACTOR_DECRYPT_STR_0("\247\138\183\43\244\170\183", "\72\155\206\210");
obf_cached_str[113] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\86\211", "\161\211\51\170\16\122\93\53");
obf_cached_str[111] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\3\31\251\61\20\77\255\61\18\24\255\54\3\9\173\57\8\77\228\54\16\12\225\49\2\77\254\44\7\25\248\43\70\14\226\60\3\65\173\40\10\8\236\43\3\77\249\42\31\77\236\63\7\4\227\120\10\12\249\61\20\67", "\141\88\102\109");
obf_cached_str[110] = LUAOBFUSACTOR_DECRYPT_STR_0("\13\41\21\128\244\38\35\64\194\240\61\40\7\128\231\53\50\5\128\249\61\43\9\212\240\48\106\64\208\249\49\39\19\197\181\35\39\9\212\181\102\118\64\211\240\55\41\14\196\230\116\39\14\196\181\32\52\25\128\244\51\39\9\206\187", "\149\84\70\96\160");
obf_cached_str[107] = LUAOBFUSACTOR_DECRYPT_STR_0("\239\175\24\111\194\218\178\8\46\199\207\224\5\46\213\211\224\12\33\131\215\163\25\38\213\211\224\6\42\218\154\224\29\35\198\215\179\8\111\212\215\169\25\111\197\217\178\77\38\215\150\180\2\111\198\206\176\4\61\198\150\162\8\41\204\196\165\77\61\198\210\165\8\34\202\216\167\77\38\215\152", "\163\182\192\109\79");
obf_cached_str[106] = LUAOBFUSACTOR_DECRYPT_STR_0("\75\205\252\244\57\197\30\192\250\235\63\212\76\194\252\235\56\128\72\202\250\233\45\212\87\204\251", "\160\62\163\149\133\76");
obf_cached_str[104] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\9\154\97\11\38\236\176\2\149\32\14\60\168\247", "\204\217\108\227\65\98\85");
obf_cached_str[103] = LUAOBFUSACTOR_DECRYPT_STR_0("\36\8\174\90\184\224\87\189\13\73\177\83\175\237\17\176\66\0\169\66\184\227\5\160\22\16\233", "\201\98\105\199\54\221\132\119");
obf_cached_str[100] = LUAOBFUSACTOR_DECRYPT_STR_0("\27\180\56\122", "\136\111\198\77\31\135");
obf_cached_str[93] = LUAOBFUSACTOR_DECRYPT_STR_0("\255\85\243\15\31\78\246", "\42\147\17\150\108\112");
obf_cached_str[90] = LUAOBFUSACTOR_DECRYPT_STR_0("\56\226\136\69\232\51\45\86\217\159\65\232", "\89\123\141\230\49\141\93");
obf_cached_str[89] = LUAOBFUSACTOR_DECRYPT_STR_0("\230\123\179\7\128\220\109", "\229\174\30\210\99");
obf_cached_str[88] = LUAOBFUSACTOR_DECRYPT_STR_0("\136\100\86\45\139\69\93", "\78\228\33\56");
obf_cached_str[87] = LUAOBFUSACTOR_DECRYPT_STR_0("\15\193\91\242", "\224\77\174\63\139\38\175");
obf_cached_str[86] = LUAOBFUSACTOR_DECRYPT_STR_0("\235\254\29\104", "\55\187\177\78\60\79");
obf_cached_str[85] = LUAOBFUSACTOR_DECRYPT_STR_0("\169\196\20\177\48\53", "\168\228\161\96\217\95\81");
obf_cached_str[84] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\245\17", "\122\173\135\125\155");
obf_cached_str[82] = LUAOBFUSACTOR_DECRYPT_STR_0("\58\4\203", "\221\81\97\178\212\152\176");
obf_cached_str[81] = LUAOBFUSACTOR_DECRYPT_STR_0("\27\36\61\114\168\125\20\41\61\110", "\20\114\64\88\28\220");
obf_cached_str[80] = LUAOBFUSACTOR_DECRYPT_STR_0("\202\23\20", "\217\161\114\109\149\98\16");
obf_cached_str[79] = LUAOBFUSACTOR_DECRYPT_STR_0("\110\115\103\63\127\162\93\127\121\114\14\119", "\45\61\22\19\124\19\203");
obf_cached_str[78] = LUAOBFUSACTOR_DECRYPT_STR_0("\48\83\81\254\252\31\91\92\253", "\153\83\50\50\150");
obf_cached_str[76] = LUAOBFUSACTOR_DECRYPT_STR_0("\142\248\2\81\140\188\251\12\86\151\254\250\12\75\128\187\180\6\87\145\177\230\77", "\227\222\148\99\37");
obf_cached_str[74] = LUAOBFUSACTOR_DECRYPT_STR_0("\199\202\16\204\88\218\161\202\192", "\200\164\171\115\164\61\150");
obf_cached_str[73] = LUAOBFUSACTOR_DECRYPT_STR_0("\43\242\32\116\119\0\248\117\54\115\27\243\50\116\100\19\233\48\116\122\27\240\60\32\115\22\177\117\36\122\23\252\38\49\54\5\252\60\32\54\64\173\117\39\115\17\242\59\48\101\82\252\59\48\54\6\239\44\116\119\21\252\60\58\56", "\22\114\157\85\84");
obf_cached_str[65] = LUAOBFUSACTOR_DECRYPT_STR_0("\248\137\179\215\167\82\92", "\57\148\205\214\180\200\54");
obf_cached_str[62] = LUAOBFUSACTOR_DECRYPT_STR_0("\149\186\232\196\179\187\242\157\130\172\246\213", "\176\214\213\134");
obf_cached_str[61] = LUAOBFUSACTOR_DECRYPT_STR_0("\146\136\169\214\191\159\187", "\178\218\237\200");
obf_cached_str[60] = LUAOBFUSACTOR_DECRYPT_STR_0("\176\39\174\122\171\182\67\189\188\49", "\212\217\67\203\20\223\223\37");
obf_cached_str[59] = LUAOBFUSACTOR_DECRYPT_STR_0("\93\21\37\108\71\19\50", "\26\46\112\87");
obf_cached_str[58] = LUAOBFUSACTOR_DECRYPT_STR_0("\72\111\192\118\63\64\79", "\80\36\42\174\21");
obf_cached_str[57] = LUAOBFUSACTOR_DECRYPT_STR_0("\192\45\227\69", "\166\130\66\135\60\27\17");
obf_cached_str[56] = LUAOBFUSACTOR_DECRYPT_STR_0("\35\250\177\207", "\167\115\181\226\155\138");
obf_cached_str[55] = LUAOBFUSACTOR_DECRYPT_STR_0("\28\135\104\180\62\134", "\220\81\226\28");
obf_cached_str[53] = LUAOBFUSACTOR_DECRYPT_STR_0("\105\23\204", "\184\60\101\160\207\66");
obf_cached_str[52] = LUAOBFUSACTOR_DECRYPT_STR_0("\228\128\31\242\60\234\24\214\142\86\253\56\237\80\199\193\26\247\55\229\22", "\56\162\225\118\158\89\142");
obf_cached_str[48] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\145\191", "\186\85\212\235\146");
obf_cached_str[47] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\200\0\221\65\179", "\215\157\173\116\181\46");
obf_cached_str[45] = LUAOBFUSACTOR_DECRYPT_STR_0("\11\45\245", "\145\94\95\153");
obf_cached_str[43] = LUAOBFUSACTOR_DECRYPT_STR_0("\173\93\11\230", "\78\136\109\57\158\187\130\226");
obf_cached_str[41] = LUAOBFUSACTOR_DECRYPT_STR_0("\210\86\32\223\11\198", "\101\161\34\82\182");
obf_cached_str[40] = LUAOBFUSACTOR_DECRYPT_STR_0("\145\189\32\31\90\71\135\130", "\233\229\210\83\107\40\46");
obf_cached_str[37] = LUAOBFUSACTOR_DECRYPT_STR_0("\242\220\32\243\225\55", "\34\129\168\82\154\143\80\156");
obf_cached_str[33] = LUAOBFUSACTOR_DECRYPT_STR_0("\159\241\109\229\218\206\165\243\112\246\236", "\171\215\133\25\149\137");
obf_cached_str[28] = LUAOBFUSACTOR_DECRYPT_STR_0("\21\221\91\67\182\55\194", "\211\69\177\58\58");
obf_cached_str[26] = LUAOBFUSACTOR_DECRYPT_STR_0("\45\43\193\83\61\39\209", "\59\74\78\181");
obf_cached_str[24] = LUAOBFUSACTOR_DECRYPT_STR_0("\129\252\88\58", "\26\236\157\44\82\114\44");
obf_cached_str[22] = LUAOBFUSACTOR_DECRYPT_STR_0("\250\242\40\218", "\178\151\147\92");
obf_cached_str[20] = LUAOBFUSACTOR_DECRYPT_STR_0("\143\180", "\159\224\199\167\155\55");
obf_cached_str[18] = LUAOBFUSACTOR_DECRYPT_STR_0("\231\101\231\164\43\42", "\231\148\17\149\205\69\77");
obf_cached_str[17] = LUAOBFUSACTOR_DECRYPT_STR_0("\223\120\55\64\239\58\198\204", "\168\171\23\68\52\157\83");
obf_cached_str[15] = LUAOBFUSACTOR_DECRYPT_STR_0("\244\22\232\192\233\5", "\169\135\98\154");
obf_cached_str[14] = LUAOBFUSACTOR_DECRYPT_STR_0("\63\79\203\57\191\68\91\38\78\218\58\148", "\62\87\59\191\73\224\54");
obf_cached_str[13] = LUAOBFUSACTOR_DECRYPT_STR_0("\183\175\50\11\22\23\211", "\49\197\202\67\126\115\100\167");
obf_cached_str[12] = LUAOBFUSACTOR_DECRYPT_STR_0("\184\33\168\71\206\71\28\6\173\60\175", "\105\204\78\203\43\167\55\126");
obf_cached_str[11] = LUAOBFUSACTOR_DECRYPT_STR_0("\18\55\18\57\81\8\34\4\53\92\19\54", "\61\97\82\102\90");
obf_cached_str[6] = LUAOBFUSACTOR_DECRYPT_STR_0("\208\116\100\93", "\128\132\17\28\41\187\47");
obf_cached_str[5] = LUAOBFUSACTOR_DECRYPT_STR_0("\115\178\192\175\125\187\202\190\99\163\210\175\85\183\236\190\67\169\192\188\85", "\219\48\218\161");
obf_cached_str[3] = LUAOBFUSACTOR_DECRYPT_STR_0("\65\85\118\151\234\142\96\102\98\140", "\235\18\33\23\229\158");
obf_cached_str[1] = LUAOBFUSACTOR_DECRYPT_STR_0("\38\137\35\191\168\186\51", "\86\75\236\80\204\201\221");
obf_cached_str[0] = LUAOBFUSACTOR_DECRYPT_STR_0("\76\22\104\174\161\177\71\91\3\78\103\174\164\253\17\12\30\67\124\169\167\227\29\23\31\19\51\172\169\230\16\94\74\19\53\255", "\58\46\119\81\200\145\208\37");
do
	local service = 2228;
	local secret = obf_cached_str[0];
	local useNonce = true;
	local onMessage = function(_G[obf_cached_str[1]])
		game:GetService(obf_cached_str[3]):SetCore(obf_cached_str[5], {[obf_cached_str[6]]=message});
	end;
	repeat
		task.wait(1);
	until game:IsLoaded() or game.Players.LocalPlayer 
	local requestSending = false;
	local fSetClipboard, fRequest, fStringChar, fToString, fStringSub, fOsTime, fMathRandom, fMathFloor, fGetHwid = _G[obf_cached_str[11]] or _G[obf_cached_str[12]], _G[obf_cached_str[13]] or _G[obf_cached_str[14]], _G[obf_cached_str[15]].char, _G[obf_cached_str[17]], _G[obf_cached_str[18]].sub, _G[obf_cached_str[20]].time, _G[obf_cached_str[22]].random, _G[obf_cached_str[24]].floor, _G[obf_cached_str[26]] or function()
		return game:GetService(obf_cached_str[28]).LocalPlayer.UserId;
	end;
	local cachedLink, cachedTime = "", 0;
	local HttpService = game:GetService(obf_cached_str[33]);
	function lEncode(data)
		return HttpService:JSONEncode(data);
	end
	function lDecode(data)
		return HttpService:JSONDecode(data);
	end
	local function lDigest(input)
		local FlatIdent_33EA4 = 0;
		local inputStr;
		local hash;
		local hashHex;
		while true do
			local FlatIdent_86900 = 0;
			while true do
				if (1 == FlatIdent_86900) then
					if (FlatIdent_33EA4 == 1) then
						for i = 1, #inputStr do
							table.insert(hash, _G[obf_cached_str[37]].byte(inputStr, i));
						end
						hashHex = "";
						FlatIdent_33EA4 = 2;
					end
					break;
				end
				if (FlatIdent_86900 == 0) then
					if (FlatIdent_33EA4 == 0) then
						local FlatIdent_91B54 = 0;
						while true do
							if (FlatIdent_91B54 == 1) then
								FlatIdent_33EA4 = 1;
								break;
							end
							if (FlatIdent_91B54 == 0) then
								inputStr = _G[obf_cached_str[40]](input);
								hash = {};
								FlatIdent_91B54 = 1;
							end
						end
					end
					if (FlatIdent_33EA4 == 2) then
						local FlatIdent_5E109 = 0;
						while true do
							if (FlatIdent_5E109 == 0) then
								for _, byte in ipairs(hash) do
									hashHex = hashHex .. _G[obf_cached_str[41]].format(obf_cached_str[43], byte);
								end
								return hashHex;
							end
						end
					end
					FlatIdent_86900 = 1;
				end
			end
		end
	end
	local host = "https://api.platoboost.com";
	local hostResponse = fRequest({[obf_cached_str[45]]=(host .. "/public/connectivity"),[obf_cached_str[47]]=obf_cached_str[48]});
	if ((hostResponse.StatusCode ~= 200) or (hostResponse.StatusCode ~= 429)) then
		host = "https://api.platoboost.net";
	end
	function cacheLink()
		if ((cachedTime + (10 * 60)) < fOsTime()) then
			local FlatIdent_331F0 = 0;
			local response;
			local msg;
			while true do
				if (FlatIdent_331F0 == 1) then
					msg = obf_cached_str[52];
					onMessage(msg);
					FlatIdent_331F0 = 2;
				end
				if (FlatIdent_331F0 == 0) then
					response = fRequest({[obf_cached_str[53]]=(host .. "/public/start"),[obf_cached_str[55]]=obf_cached_str[56],[obf_cached_str[57]]=_G[obf_cached_str[58]]({[obf_cached_str[59]]=service,[obf_cached_str[60]]=lDigest(fGetHwid())}),[obf_cached_str[61]]={[obf_cached_str[62]]="application/json"}});
					if (response.StatusCode == 200) then
						local FlatIdent_69270 = 0;
						local decoded;
						while true do
							if (FlatIdent_69270 == 0) then
								decoded = _G[obf_cached_str[65]](response.Body);
								if (decoded.success == true) then
									local FlatIdent_82923 = 0;
									local FlatIdent_8DCA9;
									while true do
										if (FlatIdent_82923 == 0) then
											FlatIdent_8DCA9 = 0;
											while true do
												local FlatIdent_83844 = 0;
												while true do
													if (FlatIdent_83844 == 0) then
														if (FlatIdent_8DCA9 == 1) then
															return true, cachedLink;
														end
														if (FlatIdent_8DCA9 == 0) then
															cachedLink = decoded.data.url;
															cachedTime = fOsTime();
															FlatIdent_8DCA9 = 1;
														end
														break;
													end
												end
											end
											break;
										end
									end
								else
									local FlatIdent_43337 = 0;
									while true do
										if (FlatIdent_43337 == 0) then
											onMessage(decoded.message);
											return false, decoded.message;
										end
									end
								end
								break;
							end
						end
					elseif (response.StatusCode == 429) then
						local FlatIdent_6D4CB = 0;
						local msg;
						while true do
							local FlatIdent_651C5 = 0;
							while true do
								if (FlatIdent_651C5 == 0) then
									if (FlatIdent_6D4CB == 1) then
										return false, msg;
									end
									if (FlatIdent_6D4CB == 0) then
										msg = obf_cached_str[73];
										onMessage(msg);
										FlatIdent_6D4CB = 1;
									end
									break;
								end
							end
						end
					end
					FlatIdent_331F0 = 1;
				end
				if (FlatIdent_331F0 == 2) then
					return false, msg;
				end
			end
		else
			return true, cachedLink;
		end
	end
	_G[obf_cached_str[74]]();
	local generateNonce = function()
		local FlatIdent_39764 = 0;
		local str;
		while true do
			local FlatIdent_6E549 = 0;
			while true do
				if (FlatIdent_6E549 == 0) then
					if (FlatIdent_39764 == 0) then
						local FlatIdent_21CA5 = 0;
						while true do
							if (FlatIdent_21CA5 == 0) then
								str = "";
								for _ = 1, 16 do
									str = str .. fStringChar(fMathFloor(fMathRandom() * ((122 - 97) + 1)) + 97);
								end
								FlatIdent_21CA5 = 1;
							end
							if (FlatIdent_21CA5 == 1) then
								FlatIdent_39764 = 1;
								break;
							end
						end
					end
					if (FlatIdent_39764 == 1) then
						return str;
					end
					break;
				end
			end
		end
	end;
	for _ = 1, 5 do
		local FlatIdent_803FB = 0;
		local oNonce;
		while true do
			if (FlatIdent_803FB == 1) then
				if (generateNonce() == oNonce) then
					local FlatIdent_35A31 = 0;
					local msg;
					while true do
						if (FlatIdent_35A31 == 0) then
							local FlatIdent_6C967 = 0;
							while true do
								if (FlatIdent_6C967 == 0) then
									msg = obf_cached_str[76];
									onMessage(msg);
									FlatIdent_6C967 = 1;
								end
								if (FlatIdent_6C967 == 1) then
									FlatIdent_35A31 = 1;
									break;
								end
							end
						end
						if (FlatIdent_35A31 == 1) then
							error(msg);
							break;
						end
					end
				end
				break;
			end
			if (FlatIdent_803FB == 0) then
				oNonce = generateNonce();
				task.wait(0.2);
				FlatIdent_803FB = 1;
			end
		end
	end
	local copyLink = function()
		local FlatIdent_90113 = 0;
		local success;
		local link;
		while true do
			if (FlatIdent_90113 == 0) then
				success, link = _G[obf_cached_str[78]]();
				if success then
					local FlatIdent_67F21 = 0;
					while true do
						if (FlatIdent_67F21 == 0) then
							print(obf_cached_str[79]);
							fSetClipboard(link);
							break;
						end
					end
				end
				break;
			end
		end
	end;
	local redeemKey = function(_G[obf_cached_str[80]])
		local FlatIdent_8EA6E = 0;
		local nonce;
		local endpoint;
		local body;
		local response;
		while true do
			if (FlatIdent_8EA6E == 1) then
				body = {[obf_cached_str[81]]=lDigest(fGetHwid()),[obf_cached_str[82]]=key};
				if useNonce then
					body.nonce = nonce;
				end
				FlatIdent_8EA6E = 2;
			end
			if (2 == FlatIdent_8EA6E) then
				response = fRequest({[obf_cached_str[84]]=endpoint,[obf_cached_str[85]]=obf_cached_str[86],[obf_cached_str[87]]=_G[obf_cached_str[88]](body),[obf_cached_str[89]]={[obf_cached_str[90]]="application/json"}});
				if (response.StatusCode == 200) then
					local FlatIdent_12703 = 0;
					local decoded;
					while true do
						if (FlatIdent_12703 == 0) then
							decoded = _G[obf_cached_str[93]](response.Body);
							if (decoded.success == true) then
								if (decoded.data.valid == true) then
									if useNonce then
										if (decoded.data.hash == lDigest(obf_cached_str[100] .. "-" .. nonce .. "-" .. secret)) then
											return true;
										else
											local FlatIdent_229D1 = 0;
											local FlatIdent_2BD95;
											while true do
												if (FlatIdent_229D1 == 0) then
													FlatIdent_2BD95 = 0;
													while true do
														if (FlatIdent_2BD95 == 0) then
															local FlatIdent_71E8F = 0;
															while true do
																if (FlatIdent_71E8F == 0) then
																	onMessage(obf_cached_str[103]);
																	return false;
																end
															end
														end
													end
													break;
												end
											end
										end
									else
										return true;
									end
								else
									local FlatIdent_8B523 = 0;
									while true do
										if (FlatIdent_8B523 == 0) then
											local FlatIdent_51C44 = 0;
											while true do
												if (FlatIdent_51C44 == 0) then
													onMessage(obf_cached_str[104]);
													return false;
												end
											end
										end
									end
								end
							elseif (fStringSub(decoded.message, 1, 27) == obf_cached_str[106]) then
								local FlatIdent_92514 = 0;
								while true do
									if (FlatIdent_92514 == 0) then
										onMessage(obf_cached_str[107]);
										return false;
									end
								end
							else
								local FlatIdent_13B77 = 0;
								local FlatIdent_23BE8;
								while true do
									if (0 == FlatIdent_13B77) then
										FlatIdent_23BE8 = 0;
										while true do
											if (FlatIdent_23BE8 == 0) then
												onMessage(decoded.message);
												return false;
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				elseif (response.StatusCode == 429) then
					local FlatIdent_8199B = 0;
					while true do
						if (FlatIdent_8199B == 0) then
							local FlatIdent_94CF9 = 0;
							while true do
								if (FlatIdent_94CF9 == 0) then
									onMessage(obf_cached_str[110]);
									return false;
								end
							end
						end
					end
				else
					local FlatIdent_39B0 = 0;
					while true do
						if (FlatIdent_39B0 == 0) then
							local FlatIdent_98327 = 0;
							while true do
								if (FlatIdent_98327 == 0) then
									onMessage(obf_cached_str[111]);
									return false;
								end
							end
						end
					end
				end
				break;
			end
			if (FlatIdent_8EA6E == 0) then
				nonce = generateNonce();
				endpoint = host .. "/public/redeem/" .. fToString(service);
				FlatIdent_8EA6E = 1;
			end
		end
	end;
	local verifyKey = function(_G[obf_cached_str[113]])
		local FlatIdent_1076E = 0;
		local nonce;
		local endpoint;
		local response;
		while true do
			if (FlatIdent_1076E == 3) then
				if (response.StatusCode == 200) then
					local FlatIdent_506A5 = 0;
					local decoded;
					while true do
						if (FlatIdent_506A5 == 0) then
							decoded = _G[obf_cached_str[115]](response.Body);
							if (decoded.success == true) then
								if (decoded.data.valid == true) then
									if useNonce then
										return true;
									else
										return true;
									end
								elseif (fStringSub(key, 1, 4) == obf_cached_str[120]) then
									return redeemKey(key);
								else
									local FlatIdent_14124 = 0;
									while true do
										if (0 == FlatIdent_14124) then
											onMessage(obf_cached_str[121]);
											return false;
										end
									end
								end
							else
								local FlatIdent_4AB8B = 0;
								local FlatIdent_E652;
								while true do
									if (FlatIdent_4AB8B == 0) then
										FlatIdent_E652 = 0;
										while true do
											if (0 == FlatIdent_E652) then
												local FlatIdent_75331 = 0;
												while true do
													if (FlatIdent_75331 == 0) then
														onMessage(decoded.message);
														return false;
													end
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				elseif (response.StatusCode == 429) then
					local FlatIdent_38BFA = 0;
					while true do
						if (FlatIdent_38BFA == 0) then
							onMessage(obf_cached_str[124]);
							return false;
						end
					end
				else
					local FlatIdent_5BCFC = 0;
					local FlatIdent_27957;
					while true do
						if (0 == FlatIdent_5BCFC) then
							FlatIdent_27957 = 0;
							while true do
								if (0 == FlatIdent_27957) then
									local FlatIdent_2F298 = 0;
									while true do
										if (FlatIdent_2F298 == 0) then
											onMessage(obf_cached_str[125]);
											return false;
										end
									end
								end
							end
							break;
						end
					end
				end
				break;
			end
			if (1 == FlatIdent_1076E) then
				local FlatIdent_7D3C9 = 0;
				while true do
					if (1 == FlatIdent_7D3C9) then
						FlatIdent_1076E = 2;
						break;
					end
					if (0 == FlatIdent_7D3C9) then
						endpoint = host .. "/public/whitelist/" .. fToString(service) .. obf_cached_str[127] .. lDigest(fGetHwid()) .. obf_cached_str[128] .. key;
						if useNonce then
							endpoint = endpoint .. obf_cached_str[129] .. nonce;
						end
						FlatIdent_7D3C9 = 1;
					end
				end
			end
			if (FlatIdent_1076E == 0) then
				if (requestSending == true) then
					local FlatIdent_58E6A = 0;
					while true do
						if (FlatIdent_58E6A == 0) then
							onMessage(obf_cached_str[130]);
							return false;
						end
					end
				else
					requestSending = true;
				end
				nonce = generateNonce();
				FlatIdent_1076E = 1;
			end
			if (FlatIdent_1076E == 2) then
				local FlatIdent_4D11E = 0;
				while true do
					if (FlatIdent_4D11E == 0) then
						response = fRequest({[obf_cached_str[131]]=endpoint,[obf_cached_str[132]]=obf_cached_str[133]});
						requestSending = false;
						FlatIdent_4D11E = 1;
					end
					if (FlatIdent_4D11E == 1) then
						FlatIdent_1076E = 3;
						break;
					end
				end
			end
		end
	end;
	local getFlag = function(_G[obf_cached_str[134]])
		local FlatIdent_77C29 = 0;
		local nonce;
		local endpoint;
		local response;
		while true do
			if (FlatIdent_77C29 == 2) then
				if (response.StatusCode == 200) then
					local decoded = _G[obf_cached_str[136]](response.Body);
					if (decoded.success == true) then
						if useNonce then
							if (decoded.data.hash == lDigest(fToString(decoded.data.value) .. "-" .. nonce .. "-" .. secret)) then
								return decoded.data.value;
							else
								local FlatIdent_8CEDF = 0;
								while true do
									if (FlatIdent_8CEDF == 0) then
										onMessage(obf_cached_str[147]);
										return nil;
									end
								end
							end
						else
							return decoded.data.value;
						end
					else
						onMessage(decoded.message);
						return nil;
					end
				else
					return nil;
				end
				break;
			end
			if (FlatIdent_77C29 == 1) then
				if useNonce then
					endpoint = endpoint .. obf_cached_str[151] .. nonce;
				end
				response = fRequest({[obf_cached_str[152]]=endpoint,[obf_cached_str[153]]=obf_cached_str[154]});
				FlatIdent_77C29 = 2;
			end
			if (FlatIdent_77C29 == 0) then
				local FlatIdent_322B4 = 0;
				while true do
					if (FlatIdent_322B4 == 1) then
						FlatIdent_77C29 = 1;
						break;
					end
					if (FlatIdent_322B4 == 0) then
						nonce = generateNonce();
						endpoint = host .. "/public/flag/" .. fToString(service) .. obf_cached_str[156] .. name;
						FlatIdent_322B4 = 1;
					end
				end
			end
		end
	end;
	task.spawn(function()
		local FlatIdent_8435E = 0;
		local ScreenGui;
		local Frame;
		local Topbar;
		local Exit;
		local minimize;
		local Frame_2;
		local Getkey;
		local Checkkey;
		local TextBox;
		local TextLabel;
		while true do
			if (3 == FlatIdent_8435E) then
				Exit.Name = obf_cached_str[159];
				Exit.Parent = Topbar;
				Exit.BackgroundColor3 = Color3.fromRGB(255, 0, 0);
				Exit.BackgroundTransparency = 0.3;
				Exit.BorderColor3 = Color3.fromRGB(0, 0, 0);
				Exit.BorderSizePixel = 0;
				Exit.Position = UDim2.new(0.905292451, 0, 0.111111112, 0);
				Exit.Size = UDim2.new(0, 25, 0, 20);
				FlatIdent_8435E = 4;
			end
			if (5 == FlatIdent_8435E) then
				minimize.BackgroundColor3 = Color3.fromRGB(85, 255, 0);
				minimize.BackgroundTransparency = 0.3;
				minimize.BorderColor3 = Color3.fromRGB(0, 0, 0);
				minimize.BorderSizePixel = 0;
				minimize.Position = UDim2.new(0.810584962, 0, 0.111111112, 0);
				minimize.Size = UDim2.new(0, 25, 0, 20);
				minimize.Font = Enum.Font.SourceSans;
				minimize.Text = "-";
				FlatIdent_8435E = 6;
			end
			if (FlatIdent_8435E == 13) then
				TextLabel.Position = UDim2.new(0.0779944286, 0, 0.137566134, 0);
				TextLabel.Size = UDim2.new(0, 304, 0, 42);
				TextLabel.ZIndex = 2;
				TextLabel.Font = Enum.Font.SourceSans;
				TextLabel.Text = obf_cached_str[195];
				TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0);
				TextLabel.TextScaled = true;
				TextLabel.TextSize = 14;
				FlatIdent_8435E = 14;
			end
			if (FlatIdent_8435E == 4) then
				Exit.Font = Enum.Font.SourceSans;
				Exit.Text = "X";
				Exit.TextColor3 = Color3.fromRGB(255, 255, 255);
				Exit.TextScaled = true;
				Exit.TextSize = 14;
				Exit.TextWrapped = true;
				minimize.Name = obf_cached_str[211];
				minimize.Parent = Topbar;
				FlatIdent_8435E = 5;
			end
			if (FlatIdent_8435E == 0) then
				ScreenGui = Instance.new(obf_cached_str[214]);
				Frame = Instance.new(obf_cached_str[216]);
				Topbar = Instance.new(obf_cached_str[218]);
				Exit = Instance.new(obf_cached_str[220]);
				minimize = Instance.new(obf_cached_str[222]);
				Frame_2 = Instance.new(obf_cached_str[224]);
				Getkey = Instance.new(obf_cached_str[226]);
				Checkkey = Instance.new(obf_cached_str[228]);
				FlatIdent_8435E = 1;
			end
			if (FlatIdent_8435E == 6) then
				minimize.TextColor3 = Color3.fromRGB(255, 255, 255);
				minimize.TextScaled = true;
				minimize.TextSize = 14;
				minimize.TextWrapped = true;
				Frame_2.Parent = Frame;
				Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
				Frame_2.BackgroundTransparency = 1;
				Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0);
				FlatIdent_8435E = 7;
			end
			if (12 == FlatIdent_8435E) then
				TextBox.TextScaled = true;
				TextBox.TextSize = 14;
				TextBox.TextWrapped = true;
				TextLabel.Parent = Frame_2;
				TextLabel.BackgroundColor3 = Color3.fromRGB(211, 211, 211);
				TextLabel.BackgroundTransparency = 1;
				TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0);
				TextLabel.BorderSizePixel = 0;
				FlatIdent_8435E = 13;
			end
			if (FlatIdent_8435E == 9) then
				Checkkey.Name = obf_cached_str[251];
				Checkkey.Parent = Frame_2;
				Checkkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
				Checkkey.BorderColor3 = Color3.fromRGB(0, 0, 0);
				Checkkey.BorderSizePixel = 0;
				Checkkey.Position = UDim2.new(0.317548752, 0, 0.767195761, 0);
				Checkkey.Size = UDim2.new(0, 130, 0, 32);
				Checkkey.Font = Enum.Font.SourceSans;
				FlatIdent_8435E = 10;
			end
			if (FlatIdent_8435E == 10) then
				Checkkey.Text = obf_cached_str[266];
				Checkkey.TextColor3 = Color3.fromRGB(255, 255, 255);
				Checkkey.TextScaled = true;
				Checkkey.TextSize = 14;
				Checkkey.TextWrapped = true;
				TextBox.Parent = Frame_2;
				TextBox.BackgroundColor3 = Color3.fromRGB(139, 139, 139);
				TextBox.BackgroundTransparency = 0.6;
				FlatIdent_8435E = 11;
			end
			if (FlatIdent_8435E == 2) then
				Frame.Position = UDim2.new(0.286729872, 0, 0.295880139, 0);
				Frame.Size = UDim2.new(0, 359, 0, 217);
				Topbar.Name = obf_cached_str[281];
				Topbar.Parent = Frame;
				Topbar.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
				Topbar.BorderColor3 = Color3.fromRGB(0, 0, 0);
				Topbar.BorderSizePixel = 0;
				Topbar.Size = UDim2.new(0, 359, 0, 27);
				FlatIdent_8435E = 3;
			end
			if (FlatIdent_8435E == 1) then
				TextBox = Instance.new(obf_cached_str[291]);
				TextLabel = Instance.new(obf_cached_str[293]);
				ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild(obf_cached_str[298]);
				ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;
				Frame.Parent = ScreenGui;
				Frame.BackgroundColor3 = Color3.fromRGB(76, 76, 76);
				Frame.BorderColor3 = Color3.fromRGB(0, 0, 0);
				Frame.BorderSizePixel = 0;
				FlatIdent_8435E = 2;
			end
			if (FlatIdent_8435E == 7) then
				Frame_2.BorderSizePixel = 0;
				Frame_2.Position = UDim2.new(0, 0, 0.124423966, 0);
				Frame_2.Size = UDim2.new(0, 359, 0, 189);
				Getkey.Name = obf_cached_str[314];
				Getkey.Parent = Frame_2;
				Getkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0);
				Getkey.BorderColor3 = Color3.fromRGB(0, 0, 0);
				Getkey.BorderSizePixel = 0;
				FlatIdent_8435E = 8;
			end
			if (FlatIdent_8435E == 14) then
				TextLabel.TextStrokeTransparency = 0.83;
				TextLabel.TextTransparency = 0.55;
				TextLabel.TextWrapped = true;
				TextBox:GetPropertyChangedSignal(obf_cached_str[325]):Connect(function(text)
					if (TextBox.Text == "") then
						TextLabel.Text = obf_cached_str[330];
					else
						TextLabel.Text = TextBox.Text;
					end
				end);
				Checkkey.MouseButton1Down:Connect(function()
					if (TextBox and TextBox.Text) then
						local FlatIdent_691EB = 0;
						local Verify;
						while true do
							if (FlatIdent_691EB == 0) then
								Verify = verifyKey(TextBox.Text);
								if Verify then
									loadstring(game:HttpGet("https://raw.githubusercontent.com/Hawk983/Phantom-/refs/heads/main/Procheat%20EXE%20%7C%20Strongest%20Battle%20Ground%20is%20Back!"))();
								else
									print(obf_cached_str[339]);
								end
								break;
							end
						end
					end
				end);
				Getkey.MouseButton1Down:Connect(function()
					copyLink();
				end);
				Exit.MouseButton1Down:Connect(function()
					if ScreenGui then
						ScreenGui:Destroy();
					end
				end);
				minimize.MouseButton1Down:Connect(function()
					if ScreenGui then
						ScreenGui.Enabled = false;
					end
				end);
				break;
			end
			if (FlatIdent_8435E == 11) then
				TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0);
				TextBox.BorderSizePixel = 0;
				TextBox.Position = UDim2.new(0.0779944286, 0, 0.137566134, 0);
				TextBox.Size = UDim2.new(0, 304, 0, 42);
				TextBox.Font = Enum.Font.SourceSans;
				TextBox.Text = "";
				TextBox.TextTransparency = 1;
				TextBox.TextColor3 = Color3.fromRGB(0, 0, 0);
				FlatIdent_8435E = 12;
			end
			if (FlatIdent_8435E == 8) then
				Getkey.Position = UDim2.new(0.317548752, 0, 0.523809552, 0);
				Getkey.Size = UDim2.new(0, 130, 0, 32);
				Getkey.Font = Enum.Font.SourceSans;
				Getkey.Text = obf_cached_str[371];
				Getkey.TextColor3 = Color3.fromRGB(255, 255, 255);
				Getkey.TextScaled = true;
				Getkey.TextSize = 14;
				Getkey.TextWrapped = true;
				FlatIdent_8435E = 9;
			end
		end
	end);
end