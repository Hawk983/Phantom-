local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\243\161","\201\221\143\235\18\33\23\229"),function(v42) if (v9(v42,5 -3 )==(151 -72)) then local v103=0;while true do if (v103==0) then v30=v8(v11(v42,1,1));return "";end end else local v104=v10(v8(v42,41 -25 ));if v30 then local v110=0;local v111;while true do if (v110==0) then v111=v13(v104,v30);v30=nil;v110=1;end if (v110==1) then return v111;end end else return v104;end end end);local function v31(v43,v44,v45) if v45 then local v105=(v43/((621 -(555 + 64))^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (0==v51) then v52,v53,v54,v55=v9(v27,v29,v29 + (934 -(857 + 74)) );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else v61=1;v59=0;end elseif (v61==2047) then return ((v60==0) and (v62 * ((928 -(214 + 713))/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^(14 + 38)))) ;end if (2==v56) then v61=v31(v58,589 -(367 + 201) ,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (v56==1) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==0) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (v64==2) then v66={};for v112=1, #v65 do v66[v112]=v10(v9(v11(v65,v112,v112)));end v64=3;end if (0==v64) then v65=nil;if  not v63 then v63=v34();if (v63==(0 + 0)) then return "";end end v64=1;end if (v64==3) then return v14(v66);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67={};local v68={};local v69={};local v70={v67,v68,nil,v69};local v71=v34();local v72={};for v80=1,v71 do local v81=v32();local v82;if (v81==(1638 -(1523 + 114))) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v72[v80]=v82;end v70[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1 + 0 )==0) then local v120=v31(v86,2,3);local v121=v31(v86,4,7 -1 );local v122={v33(),v33(),nil,nil};if (v120==0) then v122[3]=v33();v122[4]=v33();elseif (v120==1) then v122[3]=v34();elseif (v120==(1272 -(226 + 1044))) then v122[3]=v34() -((8 -6)^16) ;elseif (v120==3) then local v134=0;while true do if (v134==0) then v122[3]=v34() -(2^16) ;v122[4]=v33();break;end end end if (v31(v121,1,1)==1) then v122[2]=v72[v122[2]];end if (v31(v121,119 -(32 + 85) ,2)==1) then v122[3 + 0 ]=v72[v122[3]];end if (v31(v121,1 + 2 ,3)==1) then v122[961 -(892 + 65) ]=v72[v122[9 -5 ]];end v67[v84]=v122;end break;end end end for v87=1,v34() do v68[v87-1 ]=v39();end return v70;end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v89=v77;local v90=v78;local v91=v79;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v108=0 -0 ,v97 do if (v108>=v91) then v95[v108-v91 ]=v96[v108 + (1 -0) ];else v99[v108]=v96[v108 + 1 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v109=0;while true do if (v109==1) then if (v102<=38) then if (v102<=18) then if (v102<=(358 -(87 + 263))) then if (v102<=3) then if (v102<=1) then if (v102>0) then v99[v101[2]]=v99[v101[3]][v101[4]];else local v139=0;local v140;while true do if (v139==0) then v140=v101[2];v99[v140](v21(v99,v140 + 1 ,v101[3]));break;end end end elseif (v102>2) then do return v99[v101[2]]();end elseif v99[v101[2]] then v93=v93 + 1 ;else v93=v101[183 -(67 + 113) ];end elseif (v102<=5) then if (v102>4) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else v99[v101[2]]=v99[v101[3]]%v101[4] ;end elseif (v102<=6) then v75[v101[3]]=v99[v101[2]];elseif (v102==7) then local v244=0;local v245;while true do if (v244==0) then v245=v101[2];do return v99[v245](v21(v99,v245 + 1 ,v101[3]));end break;end end else local v246=0;local v247;local v248;local v249;while true do if (0==v246) then v247=v90[v101[3]];v248=nil;v246=1;end if (v246==1) then v249={};v248=v18({},{[v7("\132\111\179\207\223\229\107","\19\219\48\218\161\187\128")]=function(v373,v374) local v375=v249[v374];return v375[1][v375[2]];end,[v7("\67\118\213\74\18\120\114\77\222\87","\17\28\41\187\47\101")]=function(v376,v377,v378) local v379=v249[v377];v379[1][v379[2 + 0 ]]=v378;end});v246=2;end if (v246==2) then for v381=1,v101[4] do local v382=0;local v383;while true do if (v382==0) then v93=v93 + (2 -1) ;v383=v89[v93];v382=1;end if (v382==1) then if (v383[1]==71) then v249[v381-(1 + 0) ]={v99,v383[3]};else v249[v381-1 ]={v75,v383[3]};end v98[ #v98 + (3 -2) ]=v249;break;end end end v99[v101[2]]=v40(v247,v248,v76);break;end end end elseif (v102<=13) then if (v102<=(962 -(802 + 150))) then if (v102>9) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end else local v145=0;local v146;while true do if (v145==0) then v146=v101[2];v99[v146]=v99[v146](v21(v99,v146 + 1 ,v101[7 -4 ]));break;end end end elseif (v102<=11) then local v147=v101[2];v99[v147]=v99[v147](v21(v99,v147 + (1 -0) ,v94));elseif (v102==12) then local v251=v101[2];local v252=v99[v251];for v303=v251 + 1 ,v94 do v15(v252,v99[v303]);end elseif  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=(11 + 4)) then if (v102==14) then v99[v101[2]]();else v99[v101[2]]=v99[v101[3]] + v101[4] ;end elseif (v102<=16) then local v150=0;local v151;local v152;local v153;while true do if (1==v150) then v153=v99[v151 + (999 -(915 + 82)) ];if (v153>0) then if (v152>v99[v151 + 1 ]) then v93=v101[3];else v99[v151 + 3 ]=v152;end elseif (v152<v99[v151 + (2 -1) ]) then v93=v101[3];else v99[v151 + 2 + 1 ]=v152;end break;end if (v150==0) then v151=v101[2];v152=v99[v151];v150=1;end end elseif (v102>17) then if (v99[v101[2]]==v99[v101[4 -0 ]]) then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]=v76[v101[3]];end elseif (v102<=28) then if (v102<=(1210 -(1069 + 118))) then if (v102<=20) then if (v102==19) then if v99[v101[4 -2 ]] then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]]={};end elseif (v102<=(45 -24)) then local v155=v101[2];local v156=v99[v155 + 2 ];local v157=v99[v155] + v156 ;v99[v155]=v157;if (v156>0) then if (v157<=v99[v155 + 1 ]) then local v338=0;while true do if (v338==0) then v93=v101[3];v99[v155 + 3 ]=v157;break;end end end elseif (v157>=v99[v155 + 1 ]) then local v339=0;while true do if (v339==0) then v93=v101[1 + 2 ];v99[v155 + 3 ]=v157;break;end end end elseif (v102==22) then do return v99[v101[2]]();end else local v256=v101[2];local v257={};for v307=1, #v98 do local v308=v98[v307];for v340=0, #v308 do local v341=v308[v340];local v342=v341[1];local v343=v341[2];if ((v342==v99) and (v343>=v256)) then local v384=0;while true do if (v384==0) then v257[v343]=v342[v343];v341[1]=v257;break;end end end end end end elseif (v102<=25) then if (v102==(42 -18)) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else local v160=0;local v161;local v162;local v163;local v164;while true do if (0==v160) then v161=v101[2];v162,v163=v92(v99[v161](v21(v99,v161 + 1 ,v101[3])));v160=1;end if (v160==2) then for v344=v161,v94 do v164=v164 + 1 ;v99[v344]=v162[v164];end break;end if (v160==1) then v94=(v163 + v161) -1 ;v164=0;v160=2;end end end elseif (v102<=26) then local v165=v101[2];local v166,v167=v92(v99[v165](v21(v99,v165 + 1 + 0 ,v94)));v94=(v167 + v165) -1 ;local v168=0;for v226=v165,v94 do v168=v168 + 1 ;v99[v226]=v166[v168];end elseif (v102==27) then local v258=v101[2];local v259,v260=v92(v99[v258](v99[v258 + 1 ]));v94=(v260 + v258) -1 ;local v261=0;for v310=v258,v94 do v261=v261 + 1 ;v99[v310]=v259[v261];end else v99[v101[2]]=v99[v101[3]] + v101[4] ;end elseif (v102<=33) then if (v102<=30) then if (v102==29) then local v169=v101[2];v99[v169]=v99[v169]();else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102<=31) then local v173=0;local v174;while true do if (v173==0) then v174=v101[2];v99[v174]=v99[v174](v21(v99,v174 + 1 ,v101[3]));break;end end elseif (v102==32) then v99[v101[2]]=v99[v101[3]][v101[4]];else v99[v101[2]]=v101[3];end elseif (v102<=35) then if (v102>34) then v93=v101[3];else local v176=0;local v177;while true do if (0==v176) then v177=v101[793 -(368 + 423) ];do return v99[v177](v21(v99,v177 + 1 ,v101[3]));end break;end end end elseif (v102<=36) then v99[v101[6 -4 ]]=v75[v101[3]];elseif (v102>37) then local v267=v101[2];v99[v267]=v99[v267](v21(v99,v267 + (19 -(10 + 8)) ,v94));else local v269=0;local v270;while true do if (v269==0) then v270=v101[2];do return v21(v99,v270,v94);end break;end end end elseif (v102<=(219 -162)) then if (v102<=47) then if (v102<=(484 -(416 + 26))) then if (v102<=40) then if (v102>39) then local v180=v90[v101[3]];local v181;local v182={};v181=v18({},{[v7("\13\57\51\176\5\55\30","\97\82\102\90\222")]=function(v229,v230) local v231=0;local v232;while true do if (v231==0) then v232=v182[v230];return v232[1][v232[2]];end end end,[v7("\17\148\69\194\64\165\32\175\78\223","\204\78\203\43\167\55")]=function(v233,v234,v235) local v236=0;local v237;while true do if (v236==0) then v237=v182[v234];v237[1][v237[2]]=v235;break;end end end});for v238=1,v101[4] do local v239=0;local v240;while true do if (v239==1) then if (v240[1]==71) then v182[v238-(3 -2) ]={v99,v240[3]};else v182[v238-1 ]={v75,v240[3]};end v98[ #v98 + 1 ]=v182;break;end if (v239==0) then v93=v93 + 1 ;v240=v89[v93];v239=1;end end end v99[v101[2]]=v40(v180,v181,v76);else local v184=0;local v185;local v186;while true do if (v184==0) then v185=v101[2];v186=v99[v101[3]];v184=1;end if (v184==1) then v99[v185 + 1 ]=v186;v99[v185]=v186[v101[4]];break;end end end elseif (v102>41) then local v187=v101[2];local v188=v99[v101[3]];v99[v187 + 1 ]=v188;v99[v187]=v188[v101[4]];else v99[v101[2]]=v101[3];end elseif (v102<=44) then if (v102>43) then v99[v101[2]]=v76[v101[3]];elseif (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[2 + 1 ];end elseif (v102<=45) then v99[v101[2]]=v99[v101[4 -1 ]]%v101[4] ;elseif (v102>46) then v99[v101[2]]=v99[v101[3]];else local v274=0;local v275;local v276;local v277;while true do if (0==v274) then v275=v101[440 -(145 + 293) ];v276=v99[v275];v274=1;end if (v274==1) then v277=v99[v275 + 2 ];if (v277>0) then if (v276>v99[v275 + (431 -(44 + 386)) ]) then v93=v101[3];else v99[v275 + 3 ]=v276;end elseif (v276<v99[v275 + 1 ]) then v93=v101[3];else v99[v275 + (1489 -(998 + 488)) ]=v276;end break;end end end elseif (v102<=52) then if (v102<=49) then if (v102>48) then local v197=0;local v198;local v199;while true do if (v197==0) then v198=v101[2];v199={};v197=1;end if (1==v197) then for v352=1, #v98 do local v353=v98[v352];for v365=0, #v353 do local v366=0;local v367;local v368;local v369;while true do if (v366==1) then v369=v367[2];if ((v368==v99) and (v369>=v198)) then v199[v369]=v368[v369];v367[1]=v199;end break;end if (v366==0) then v367=v353[v365];v368=v367[1];v366=1;end end end end break;end end else v93=v101[3];end elseif (v102<=(16 + 34)) then local v201=0;local v202;local v203;local v204;local v205;while true do if (v201==1) then v94=(v204 + v202) -1 ;v205=0;v201=2;end if (v201==2) then for v354=v202,v94 do local v355=0;while true do if (0==v355) then v205=v205 + 1 ;v99[v354]=v203[v205];break;end end end break;end if (0==v201) then v202=v101[2];v203,v204=v92(v99[v202](v21(v99,v202 + 1 ,v94)));v201=1;end end elseif (v102>51) then v75[v101[3]]=v99[v101[2]];else local v280=v101[2];local v281,v282=v92(v99[v280](v21(v99,v280 + 1 ,v101[3 + 0 ])));v94=(v282 + v280) -1 ;local v283=0;for v323=v280,v94 do v283=v283 + 1 ;v99[v323]=v281[v283];end end elseif (v102<=54) then if (v102>(825 -(201 + 571))) then local v206=0;local v207;local v208;local v209;while true do if (2==v206) then if (v208>0) then if (v209<=v99[v207 + 1 ]) then local v397=0;while true do if (v397==0) then v93=v101[1141 -(116 + 1022) ];v99[v207 + 3 ]=v209;break;end end end elseif (v209>=v99[v207 + 1 ]) then local v398=0;while true do if (v398==0) then v93=v101[3];v99[v207 + (12 -9) ]=v209;break;end end end break;end if (v206==0) then v207=v101[2];v208=v99[v207 + 2 ];v206=1;end if (v206==1) then v209=v99[v207] + v208 ;v99[v207]=v209;v206=2;end end else local v210=v101[2];v99[v210](v21(v99,v210 + 1 ,v94));end elseif (v102<=55) then v99[v101[2]]();elseif (v102>(33 + 23)) then v99[v101[2]]= #v99[v101[3]];else local v285=0;local v286;while true do if (0==v285) then v286=v101[2];v99[v286](v21(v99,v286 + 1 ,v101[10 -7 ]));break;end end end elseif (v102<=(237 -170)) then if (v102<=62) then if (v102<=59) then if (v102==58) then do return;end else local v211=v101[2];local v212,v213=v92(v99[v211](v99[v211 + 1 ]));v94=(v213 + v211) -1 ;local v214=0;for v241=v211,v94 do local v242=0;while true do if (0==v242) then v214=v214 + 1 ;v99[v241]=v212[v214];break;end end end end elseif (v102<=60) then v99[v101[2]]=v99[v101[3]]%v99[v101[863 -(814 + 45) ]] ;elseif (v102>61) then local v287=0;local v288;while true do if (v287==0) then v288=v101[2];v99[v288]=v99[v288]();break;end end else v99[v101[2]]=v99[v101[3]]%v99[v101[4]] ;end elseif (v102<=(157 -93)) then if (v102==63) then v99[v101[2]]={};else v99[v101[1 + 1 ]][v99[v101[3]]]=v101[4];end elseif (v102<=65) then local v219=0;local v220;while true do if (v219==0) then v220=v101[2];do return v21(v99,v220,v94);end break;end end elseif (v102==66) then v99[v101[1 + 1 ]]=v75[v101[888 -(261 + 624) ]];else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=72) then if (v102<=69) then if (v102==68) then if  not v99[v101[3 -1 ]] then v93=v93 + 1 ;else v93=v101[3];end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=70) then if (v99[v101[1082 -(1020 + 60) ]]==v101[4]) then v93=v93 + 1 ;else v93=v101[1426 -(630 + 793) ];end elseif (v102==71) then v99[v101[2]]=v99[v101[3]];else local v298=v101[2];local v299=v99[v298];for v330=v298 + (3 -2) ,v94 do v15(v299,v99[v330]);end end elseif (v102<=74) then if (v102==73) then do return;end else local v223=0;local v224;while true do if (v223==0) then v224=v101[2];v99[v224](v21(v99,v224 + 1 ,v94));break;end end end elseif (v102<=75) then v99[v101[2]]= #v99[v101[3]];elseif (v102>76) then for v332=v101[2],v101[3] do v99[v332]=nil;end else for v334=v101[2],v101[3] do v99[v334]=nil;end end v93=v93 + 1 ;break;end if (v109==0) then v101=v89[v93];v102=v101[1];v109=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
