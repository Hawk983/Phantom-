--// Phantom HUB Teleport GUI (Modern Design v3.4 - Center Right Toggle)
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local UserInputService = game:GetService("UserInputService")

--// Blur Effect
local Blur = Instance.new("BlurEffect")
Blur.Size = 0
Blur.Parent = Lighting

--// ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Phantom HUB Teleport"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = Player:WaitForChild("PlayerGui")

--// Circular Toggle Button (Center Right)
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 55, 0, 55)
ToggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
ToggleButton.Position = UDim2.new(1, -70, 0.5, 0) -- center right
ToggleButton.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Text = "P"
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 20
ToggleButton.AutoButtonColor = false
ToggleButton.Active = true
ToggleButton.Selectable = true
ToggleButton.Parent = ScreenGui

local CircleCorner = Instance.new("UICorner")
CircleCorner.CornerRadius = UDim.new(1, 0)
CircleCorner.Parent = ToggleButton

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(100, 100, 255)
UIStroke.Thickness = 2
UIStroke.Transparency = 0.2
UIStroke.Parent = ToggleButton

--// Glow Animation
task.spawn(function()
	while ToggleButton do
		TweenService:Create(UIStroke, TweenInfo.new(1.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Transparency = 0.6}):Play()
		task.wait(1.2)
		TweenService:Create(UIStroke, TweenInfo.new(1.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Transparency = 0.2}):Play()
		task.wait(1.2)
	end
end)

--// Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Size = UDim2.new(0, 300, 0, 320)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
MainFrame.BackgroundTransparency = 0.25
MainFrame.Visible = false
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 15)
Corner.Parent = MainFrame

local Stroke = Instance.new("UIStroke")
Stroke.Color = Color3.fromRGB(90, 90, 160)
Stroke.Thickness = 1.5
Stroke.Transparency = 0.2
Stroke.Parent = MainFrame

--// Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
Title.BackgroundTransparency = 0.3
Title.Text = "Phantom HUB | Teleport System"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 15)
TitleCorner.Parent = Title

--// Layout
local Layout = Instance.new("UIListLayout")
Layout.Padding = UDim.new(0, 8)
Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
Layout.SortOrder = Enum.SortOrder.LayoutOrder
Layout.Parent = MainFrame
Layout.VerticalAlignment = Enum.VerticalAlignment.Top
Title.LayoutOrder = 0

--// Create Button Function
local function CreateButton(text)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.85, 0, 0, 34)
	btn.BackgroundColor3 = Color3.fromRGB(45, 45, 60)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Text = text
	btn.AutoButtonColor = true
	btn.BackgroundTransparency = 0.1

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 8)
	corner.Parent = btn

	local stroke = Instance.new("UIStroke")
	stroke.Color = Color3.fromRGB(80, 80, 130)
	stroke.Thickness = 1
	stroke.Transparency = 0.2
	stroke.Parent = btn

	btn.MouseEnter:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 70, 110)}):Play()
	end)
	btn.MouseLeave:Connect(function()
		TweenService:Create(btn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 45, 60)}):Play()
	end)

	btn.Parent = MainFrame
	return btn
end

--// Buttons
local AddPoint = CreateButton("Add Teleport Point")
local RemovePoint = CreateButton("Remove Selected Point")
local TeleportToPoint = CreateButton("Teleport to Selected")
local TeleportBack = CreateButton("Teleport to Previous Spot")

--// Scroll Frame
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Size = UDim2.new(0.85, 0, 0, 130)
ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollFrame.ScrollBarThickness = 4
ScrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
ScrollFrame.BackgroundTransparency = 0.3
ScrollFrame.BorderSizePixel = 0
ScrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
ScrollFrame.Parent = MainFrame

local SFLayout = Instance.new("UIListLayout")
SFLayout.Padding = UDim.new(0, 5)
SFLayout.Parent = ScrollFrame

--// Variables
local teleportPoints = {}
local selectedPoint = nil
local previousSpot = nil
local isOpen = false

--// Helper for teleport points
local function CreatePoint(name, cframe)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, -5, 0, 30)
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.Font = Enum.Font.Gotham
	button.TextSize = 13
	button.Text = name
	button.AutoButtonColor = true
	button.Parent = ScrollFrame

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 6)
	corner.Parent = button

	button.MouseButton1Click:Connect(function()
		if selectedPoint and selectedPoint.button then
			selectedPoint.button.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
		end
		selectedPoint = {name = name, cframe = cframe, button = button}
		button.BackgroundColor3 = Color3.fromRGB(90, 90, 130)
	end)
end

--// Add/Remove/Teleport Logic
AddPoint.MouseButton1Click:Connect(function()
	local name = "Point " .. tostring(#teleportPoints + 1)
	local cframe = HumanoidRootPart.CFrame
	local point = {name = name, cframe = cframe}
	table.insert(teleportPoints, point)
	CreatePoint(name, cframe)
	game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "Added " .. name, Duration = 2})
end)

RemovePoint.MouseButton1Click:Connect(function()
	if selectedPoint then
		for i, point in ipairs(teleportPoints) do
			if point.name == selectedPoint.name then
				if selectedPoint.button then selectedPoint.button:Destroy() end
				table.remove(teleportPoints, i)
				selectedPoint = nil
				break
			end
		end
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "Point removed.", Duration = 2})
	else
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "No point selected!", Duration = 2})
	end
end)

TeleportToPoint.MouseButton1Click:Connect(function()
	if selectedPoint then
		previousSpot = HumanoidRootPart.CFrame
		HumanoidRootPart.CFrame = selectedPoint.cframe
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "Teleported to " .. selectedPoint.name, Duration = 2})
	else
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "Select a point first!", Duration = 2})
	end
end)

TeleportBack.MouseButton1Click:Connect(function()
	if previousSpot then
		local current = HumanoidRootPart.CFrame
		HumanoidRootPart.CFrame = previousSpot
		previousSpot = current
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "Returned to previous spot!", Duration = 2})
	else
		game.StarterGui:SetCore("SendNotification", {Title = "Phantom HUB", Text = "No previous spot saved!", Duration = 2})
	end
end)

--// Toggle Animation
local function ToggleMenu()
	isOpen = not isOpen
	if isOpen then
		MainFrame.Visible = true
		TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad), {
			Size = UDim2.new(0, 300, 0, 320),
			BackgroundTransparency = 0.25
		}):Play()
		TweenService:Create(Blur, TweenInfo.new(0.5), {Size = 15}):Play()
	else
		TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad), {
			Size = UDim2.new(0, 300, 0, 0),
			BackgroundTransparency = 1
		}):Play()
		TweenService:Create(Blur, TweenInfo.new(0.5), {Size = 0}):Play()
		task.wait(0.45)
		MainFrame.Visible = false
	end
end

--// Safe Toggle Setup
task.wait(1)
if UserInputService.TouchEnabled then
	ToggleButton.TouchTap:Connect(ToggleMenu)
else
	ToggleButton.MouseButton1Click:Connect(ToggleMenu)
end